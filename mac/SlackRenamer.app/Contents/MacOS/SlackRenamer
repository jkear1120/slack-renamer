#!/bin/zsh
set -euo pipefail

# Resolve paths
APP_DIR="$(cd -- "$(dirname "$0")/.." && pwd)"
RES_DIR="${APP_DIR}/Resources"
APP_SRC_DIR="${RES_DIR}/app"

# Determine working directory: packaged app or repo root fallback
if [ -d "${APP_SRC_DIR}/src" ]; then
  cd "${APP_SRC_DIR}"
else
  # Fallback for running inside repo (dev scenario)
  cd "${APP_DIR}/../../.."
fi

export SLACK_RENAMER_TOKENS_FILE="${HOME}/Library/Application Support/SlackRenamer/tokens.json"

# Prefer embedded node
EMBED_NODE="${APP_DIR}/MacOS/node"
if [ -x "${EMBED_NODE}" ]; then
  NODE_BIN="${EMBED_NODE}"
else
  NODE_BIN="$(command -v node || true)"
fi
if [ -z "${NODE_BIN}" ]; then
  osascript -e 'display alert "SlackRenamer" message "Node.js not found. Please install Node 18+."' || true
  exit 1
fi

# Ensure deps (only when running from repo)
if [ ! -d node_modules ]; then
  echo "[SlackRenamer] Installing dependencies..."
  npm install --omit=dev || { osascript -e 'display alert "SlackRenamer" message "npm install failed"'; exit 1; }
fi

PORT="${PORT:-3000}"
open "http://localhost:${PORT}" 2>/dev/null || true
exec "${NODE_BIN}" src/server.js
# Icon (generate if missing)
ICON_RES="${APP_DIR}/Resources"
ICON_ICNS="${ICON_RES}/AppIcon.icns"
if [ ! -f "${ICON_ICNS}" ]; then
  mkdir -p "${ICON_RES}"
  if command -v iconutil >/dev/null 2>&1; then
    if [ -f "${PROJECT_ROOT}/mac/icon-source.png" ]; then
      TMPDIR_ICON=$(mktemp -d)
      ICONSET="${TMPDIR_ICON}/AppIcon.iconset"
      mkdir -p "${ICONSET}"
      # 1024から各サイズを生成
      for sz in 16 32 128 256 512; do
        sips -z $sz $sz     "${PROJECT_ROOT}/mac/icon-source.png" --out "${ICONSET}/icon_${sz}x${sz}.png" >/dev/null
        sips -z $((sz*2)) $((sz*2)) "${PROJECT_ROOT}/mac/icon-source.png" --out "${ICONSET}/icon_${sz}x${sz}@2x.png" >/dev/null
      done
      # 1024
      cp "${PROJECT_ROOT}/mac/icon-source.png" "${ICONSET}/icon_512x512@2x.png"
      iconutil -c icns "${ICONSET}" -o "${ICON_ICNS}" || true
      rm -rf "${TMPDIR_ICON}"
    fi
  fi
fi

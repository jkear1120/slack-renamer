#!/bin/zsh
set -euo pipefail

# Resolve paths
APP_DIR="$(cd -- "$(dirname "$0")/.." && pwd)"
# .app は <repo>/mac/SlackRenamer.app に置いているため、repo root へは3階層上がる
PROJECT_ROOT="$(cd -- "${APP_DIR}/../../.." && pwd)"

cd "$PROJECT_ROOT"

# Ensure tokens file path is set for server
export SLACK_RENAMER_TOKENS_FILE="${HOME}/Library/Application Support/SlackRenamer/tokens.json"

# Install if needed
if [ ! -d node_modules ]; then
  echo "[SlackRenamer] Installing dependencies..."
  npm install || { osascript -e 'display alert "SlackRenamer" message "npm install failed"'; exit 1; }
fi

# Start
PORT="${PORT:-3000}"
open "http://localhost:${PORT}" 2>/dev/null || true
npm start
# Icon (generate if missing)
ICON_RES="${APP_DIR}/Resources"
ICON_ICNS="${ICON_RES}/AppIcon.icns"
if [ ! -f "${ICON_ICNS}" ]; then
  mkdir -p "${ICON_RES}"
  if command -v iconutil >/dev/null 2>&1; then
    if [ -f "${PROJECT_ROOT}/mac/icon-source.png" ]; then
      TMPDIR_ICON=$(mktemp -d)
      ICONSET="${TMPDIR_ICON}/AppIcon.iconset"
      mkdir -p "${ICONSET}"
      # 1024から各サイズを生成
      for sz in 16 32 128 256 512; do
        sips -z $sz $sz     "${PROJECT_ROOT}/mac/icon-source.png" --out "${ICONSET}/icon_${sz}x${sz}.png" >/dev/null
        sips -z $((sz*2)) $((sz*2)) "${PROJECT_ROOT}/mac/icon-source.png" --out "${ICONSET}/icon_${sz}x${sz}@2x.png" >/dev/null
      done
      # 1024
      cp "${PROJECT_ROOT}/mac/icon-source.png" "${ICONSET}/icon_512x512@2x.png"
      iconutil -c icns "${ICONSET}" -o "${ICON_ICNS}" || true
      rm -rf "${TMPDIR_ICON}"
    fi
  fi
fi
